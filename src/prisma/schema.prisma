// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider    = "zod-prisma"
  output      = "../lib/api/schemas/generated"
  modelSuffix = "GeneratedSchema"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CpuBrand {
  Intel
  AMD
}

enum LaunchQuarter {
  Q1
  Q2
  Q3
  Q4
}

model Cpu {
  /// CPU unique identifier
  id            Int            @id @default(autoincrement())
  /// Brand Name
  brand         CpuBrand
  /// Model Name
  name          String
  /// Family Name
  family        String
  /// Launch Quarter
  launchQuarter LaunchQuarter?
  /// Launch Year
  launchYear    Int?
  /// Number of Cores
  cores         Int
  /// Number of Threads
  threads       Int
  /// Frequency in GHz * 100,
  /// floating point number stored as an int with 2 digits after decimal point
  /// (i.e. 3.61 GHz is stored as 361)
  frequency     Int
  /// L1 Cache in KB
  cacheL1       Int?
  /// L2 Cache in KB
  cacheL2       Int?
  /// L3 Cache in KB
  cacheL3       Int?
  /// TDP in Watts (W)
  tdp           Int?
  /// Lithography in nm
  lithography   Int?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  // A brand-name combination must be unique (i.e. cannot have two INTEL i7-6700K at the same time)
  @@unique([brand, name])
}

enum GpuBrand {
  Intel
  AMD
  NVIDIA
}

enum GpuReseller {
  GIGABYTE
  EVGA
  ASUS_ROG
}

model Gpu {
  id            Int           @id @default(autoincrement())
  brand         GpuBrand
  name          String
  reseller      GpuReseller
  launchQuarter LaunchQuarter
  launchYear    Int
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@unique([brand, name, reseller])
}

// enum UserRole {
//   USER
//   ADMIN
// }

// model User {
//   id        String   @id @default(uuid())
//   role      UserRole @default(USER)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }
